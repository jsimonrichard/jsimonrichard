{"version":3,"sources":["components/typer.js","components/terminal.js","img/simon.jpg","img/jungleBackground.jpg","App.js","reportWebVitals.js","index.js"],"names":["Cursor","props","className","id","Typer","handleType","children","delay","endDelay","text","state","setState","substring","length","isFinished","console","log","setTimeout","handleFinish","isUnmounted","hideCursor","onFinish","this","start","startDelay","Component","TerminalBase","Terminal","command","TerminalAnimated","useState","isRunning","setIsRunning","style","visibility","TerminalLink","href","defaultProps","App","fillHeaderBG","setFillHeaderBG","headerScrollHandler","e","window","scrollY","useEffect","addEventListener","backgroundImage","jungleBackground","src","profile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0449c36.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction Cursor(props) {\n    return (\n        <span className=\"cursor\" id={props.id}>&#9608;</span>\n    );\n}\n\nclass Typer extends Component {\n  static defaultProps = {\n    startDelay: 500,\n    delay: 50,\n    endDelay: 500\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      isUnmounted: false,\n      hideCursor: false\n    }\n\n    this.handleFinish = () => {\n      this.setState({hideCursor: true});\n      this.props.onFinish();\n    }\n  }\n\n  componentDidMount() {\n    if(this.props.start === \"onmount\") {\n      setTimeout(this.handleType, this.props.startDelay);\n    }\n  }\n\n  handleType = () => {\n    const { children, delay, endDelay } = this.props;\n    const { text } = this.state;\n\n    this.setState({\n      text: children.substring(0, text.length + 1),\n      isFinished: text === children\n    }, () => {\n      if(this.state.isFinished) {\n        console.log(\"Calculating...\");\n        setTimeout(this.handleFinish, endDelay);\n      } else {\n        setTimeout(this.handleType, delay);\n      }\n    });\n  };\n\n  render() {\n    return (<span>{ this.state.text }{ !this.state.hideCursor && <Cursor /> }</span>);\n  }\n}\n\nexport { Typer, Cursor };","import React, { useState } from 'react';\nimport { Typer, Cursor } from './typer';\n\nexport function TerminalBase(props) {\n  return (\n    <div className={props.className+\" bg-terminal-gray rounded-lg text-white\"}>\n      <div className=\"p-3 flex flex-row-reverse\">\n        <div className=\"rounded-full bg-red-500 w-3.5 h-3.5 ml-2\" />\n        <div className=\"rounded-full bg-yellow-500 w-3.5 h-3.5 ml-2\" />\n        <div className=\"rounded-full bg-green-500 w-3.5 h-3.5 ml-2\" />\n      </div>\n      <div className=\"p-6 pt-0\">\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport function Terminal(props) {\n  return (\n    <TerminalBase className={props.className}>\n      <div>\n        <span className=\"font-bold\">\n          <span className=\"text-terminal-green\">jsimonrichard</span>\n          :<span className=\"text-terminal-blue\">~</span>$\n        </span>\n        \n        <span> {props.command}</span>\n      </div>\n\n      {props.children}\n \n    </TerminalBase>\n  );\n}\n\nexport function TerminalAnimated(props) {\n  const [isRunning, setIsRunning] = useState(true);\n\n  return <Terminal command={(\n    <Typer start=\"onmount\" onFinish={()=>setIsRunning(false)}>\n      {props.command}\n    </Typer>\n  )} className={props.className}>\n\n    <div style={{visibility: isRunning ? \"hidden\" : \"visible\"}}>\n      {props.children}<Cursor />\n    </div>\n\n  </Terminal>;\n}\n\nexport function TerminalLink(props) {\n    return (\n        <a className=\"\" href={props.href}>\n            [<span className=\"text-green-500 hover:text-green-300 hover:underline cursor-pointer uppercase\">\n              { props.children }\n            </span>]\n        </a>\n    );\n}","export default __webpack_public_path__ + \"static/media/simon.0d6f7d12.jpg\";","export default __webpack_public_path__ + \"static/media/jungleBackground.f1503356.jpg\";","import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { TerminalAnimated, TerminalLink } from './components/terminal';\nimport profile from \"./img/simon.jpg\";\nimport jungleBackground from './img/jungleBackground.jpg';\n\nfunction App() {\n  // Handle scrolling\n  const [fillHeaderBG, setFillHeaderBG] = useState(false)\n  const headerScrollHandler = e => {\n    setFillHeaderBG( window.scrollY != 0 );\n  }\n\n  // Add the event listener\n  useEffect(()=>{\n    window.addEventListener(\"scroll\", headerScrollHandler);\n  },[]);\n\n  // Render the app\n  return (\n    <div className=\"App min-h-screen\">\n      <header className={\"fixed p-6 w-screen text-3xl font-bold z-10 \"\n                                   + (fillHeaderBG ? \"bg-white\" : \"bg-transparent\")}>\n\n          J. Simon Richard\n\n      </header>\n      \n\n\n      <section className=\"w-screen min-h-75-screen p-6 grid bg-cover bg-left-top bg-no-repeat\" style={{backgroundImage: `url(${jungleBackground})` }}>\n        <TerminalAnimated className=\"place-self-center w-full max-w-screen-lg mx-auto min-h-96 mt-20 mb-20\" command=\"whoami\">\n          \n          <br />\n          Hi, my name is J. Simon Richard. I'm an aspiring full-stack developer with a wide range of <TerminalLink>interests</TerminalLink> and <TerminalLink>skills</TerminalLink>. There's a lot I don't know, but when I'm faced with something new I'm good at learning it quickly.\n\n          <br/><br/>\n\n          I'm only graduating high school this year, but I've already had some great <TerminalLink>education</TerminalLink> and <TerminalLink>work</TerminalLink> experiences. \n        \n        </TerminalAnimated>\n      </section>\n\n\n\n      <section className=\"w-screen bg-white about-bg-shape -mt-8\">\n        <div className=\"container mx-auto grid md:grid-cols-2 p-10 gap-8\">\n          <div className=\"self-center\">\n            <img src={profile} className=\"mx-auto w-auto h-auto max-h-96 rounded-full\" />\n          </div>\n          <div className=\"\">\n            <h1 className=\"text-3xl\">About</h1>\n\n            <br />\n            This website is a work-in-progress. Come back later to see more content.\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n\n//Photo by <a href=\"https://unsplash.com/@conscious_design?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Conscious Design</a> on <a href=\"https://unsplash.com/s/photos/4k-background-willough-tree?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}