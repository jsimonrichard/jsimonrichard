---
import '@fontsource/merriweather/400.css';
import '@fontsource/merriweather/700.css';
import '@fontsource/source-sans-pro/400.css';
import '@fontsource/source-sans-pro/700.css';
import '@fontsource-variable/jetbrains-mono';

import Bibliography from '~/components/Bibliography.astro';
import BibItem from '~/components/BibItem.astro';

import { getCollection } from 'astro:content';
import { sortBySortIndex } from '~/content/config';
import { cn, englishList } from '~/utils';
import LineHeader from '~/components/LineHeader.astro';

import techSkills from '~/tech-skills.yaml';

const education = await getCollection('resume-education');
const researchExp = await getCollection('resume-research-experience');
let leadershipTeachingExp = await getCollection(
  'resume-leadership-teaching-experience',
);
const techExp = await getCollection('resume-tech-experience');
education.sort(sortBySortIndex);
researchExp.sort(sortBySortIndex);
leadershipTeachingExp.sort(sortBySortIndex);
techExp.sort(sortBySortIndex);

// Only take the first two
leadershipTeachingExp = leadershipTeachingExp.splice(0, 2);

const contactInfo = [
  { text: 'Painesville, OH' },
  { text: 'jsimonrichard@gmail.com', link: 'mailto:jsimonrichard@gmail.com' },
  {
    text: 'github.com/jsimonrichard',
    link: 'https://github.com/jsimonrichard',
  },
  {
    text: 'linkedin.com/in/jsimonrichard/',
    link: 'https://www.linkedin.com/in/jsimonrichard/',
  },
  {
    text: 'jsimonrichard.com',
    link: 'https://jsimonrichard.com',
  },
];
---

<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>J. Simon Richard | Printable Resume</title>

    <style is:global>
      html,
      body {
        font-family:
          Source Sans Pro,
          system-ui,
          sans-serif;
        font-size: 11pt;
      }
      code {
        font-family:
          JetBrains Mono,
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace;
      }
      h1,
      h2,
      h3 {
        font-family: Merriweather, serif;
      }

      @page {
        size: letter;
        padding: 2rem;
      }
    </style>
  </head>
  <body>
    <main class="w-full leading-snug">
      <section id="header" class="mb-4 flex flex-row items-center">
        <h1 class="text-2xl font-bold">J.&nbsp;Simon&nbsp;Richard</h1>
        <div class="flex-1"></div>
        <div
          class="flex flex-row flex-wrap justify-end flex-separated overflow-hidden"
        >
          {
            contactInfo.map((c: any) => (
              <a
                href={c.link}
                target="_blank"
                class={cn(
                  c.link && 'text-sky-700 hover:underline',
                  'px-2 relative after:absolute after:top-0 after:left-full after:w-[1px] after:h-full after:bg-slate-400',
                )}
              >
                {c.text.replace(/ /g, '\xA0')}
              </a>
            ))
          }
        </div>
      </section>

      <section id="education" class="mb-4">
        <LineHeader class="text-xl font-bold mb-2">Education</LineHeader>
        <div class="flex flex-row gap-3">
          {
            [education[0]].map((edu: any) => (
              <div class="basis-[72%]">
                <h3 class="text-lg font-bold">
                  {edu.data.name} | {edu.data.gpa} GPA
                </h3>
                <p class="mb-2">
                  {edu.data.graduation} | {edu.data.location}
                </p>
                <ul class="list-disc list-outside ml-6">
                  {edu.data.notes.map((n: string) => (
                    <li>{n}</li>
                  ))}
                </ul>
              </div>
            ))
          }

          {
            [education[1]].map((edu: any) => (
              <div>
                <h3 class="text-lg font-bold">
                  {edu.data.name} | {edu.data.gpa} GPA
                </h3>
                <p class="mb-2">
                  {edu.data.graduation} | {edu.data.location}
                </p>
                <ul class="list-disc list-outside ml-6">
                  {edu.data.notes.map((n: string) => (
                    <li>{n}</li>
                  ))}
                </ul>
              </div>
            ))
          }
        </div>
      </section>
      <section id="publications" class="mb-4">
        <LineHeader class="text-xl font-bold mb-2">Publications</LineHeader>
        <Bibliography>
          <BibItem>
            J. S. Richard, “Hybrid Quantum or Purely Classical? Assessing the
            Utility of Quantum Feature Embeddings,” Aug. 2024, doi:
            <a
              href="https://doi.org/10.12688/f1000research.154428.1"
              class="text-sky-700 hover:underline"
              >10.12688/f1000research.154428.1</a
            >.
          </BibItem>
          <BibItem>
            G. Averkov, K. von Dichter, S. Richard, and I. Soprunov, “Mixed
            volumes of zonoids and the absolute value of the Grassmannian
            (Extended Abstract),” Apr. 03, 2024, arXiv: arXiv:2404.02842. doi:
            <a
              href="https://doi.org/10.48550/arXiv.2404.02842"
              class="text-sky-700 hover:underline">10.48550/arXiv.2404.02842</a
            >.
          </BibItem>
          <BibItem>
            J. S. Richard, “Making the Transition to Post-Quantum Cryptography,”
            The Downtown Review, vol. 9, no. 2, May 2023, [Online]. Available:
            <a
              href="https://engagedscholarship.csuohio.edu/tdr/vol9/iss2/4"
              class="text-sky-700 hover:underline"
              >https://engagedscholarship.csuohio.edu/tdr/vol9/iss2/4</a
            >.
          </BibItem>
        </Bibliography>
      </section>
      <section id="research-experience" class="mb-4">
        <LineHeader class="text-xl font-bold mb-2"
          >Research Experience</LineHeader
        >
        <div class="grid gap-4">
          {
            researchExp.map((r: any) => (
              <div>
                <h3 class="text-md font-bold mb-1">{r.data.name}</h3>
                <div class="flex flex-row">
                  <div class="border-r border-slate-400 pr-2">
                    {r.data.start} &mdash; {r.data.end}
                  </div>
                  <div class="pl-2">
                    {r.data.location.replace(/ /g, '\xA0')}
                  </div>
                </div>
                <p class="mb-2">
                  Advised by{' '}
                  {englishList(
                    r.data.advisors.map((ad: string) => <strong>{ad}</strong>),
                  )}
                </p>
                <ul class="list-disc list-outside ml-6">
                  {r.data.notes.map((n: string) => (
                    <li>{n}</li>
                  ))}
                </ul>
              </div>
            ))
          }
        </div>
      </section>

      <section id="leadership-teaching-experience" class="mb-4">
        <LineHeader class="text-xl font-bold mb-4">
          Leadership & Teaching Experience
        </LineHeader>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          {
            leadershipTeachingExp.map((l: any) => (
              <div class="">
                <h3 class="text-md font-bold mb-2">{l.data.name}</h3>
                <p class="mb-2">
                  {l.data.start} &mdash; {l.data.end}
                  <br />
                  {l.data.location}
                </p>
                <ul class="list-disc list-outside ml-6">
                  {l.data.notes.map((n: string) => (
                    <li>{n}</li>
                  ))}
                </ul>
              </div>
            ))
          }
        </div>
      </section>
      <section id="additional-tech-experience" class="mb-4">
        <LineHeader class="text-xl font-bold mb-4"
          >Additional Technical Experience</LineHeader
        >
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          {
            techExp.map((t: any) => (
              <div class="">
                <h3 class="text-md font-bold mb-2">{t.data.name}</h3>
                <p class="mb-2">
                  {t.data.start} &mdash; {t.data.end}
                  <br />
                  {t.data.location}
                </p>
                <ul class="list-disc list-outside ml-6">
                  {t.data.notes.map((n: string) => (
                    <li>{n}</li>
                  ))}
                </ul>
              </div>
            ))
          }
        </div>
      </section>
      <section id="tech-skills" class="mb-4">
        <LineHeader class="text-xl font-bold mb-4">Technical Skills</LineHeader>
        <div class="flex flex-row gap-2">
          {
            Object.keys(techSkills).map((key) => {
              const v = techSkills[key];
              if (key === 'webFrameworks') {
                return;
              }
              return (
                <div>
                  <h3 class="text-md font-bold mb-2">{v.prettyName}</h3>
                  <ul class="list-disc list-outside ml-6">
                    {v.list.map((l: any) => {
                      let years = 0;
                      if ('years' in l) {
                        years = l.years;
                      } else {
                        years = new Date().getFullYear() - l.since;
                      }
                      return (
                        <li>
                          {l.name}
                          <span class="text-slate-600">
                            ({years} year{years > 1 && 's'}; {l.level})
                          </span>
                        </li>
                      );
                    })}
                  </ul>
                </div>
              );
            })
          }
        </div>
      </section>
    </main>
  </body>
</html>
