{"version":3,"file":"component---src-pages-index-js-14d4e791e4d4602cf21c.js","mappings":"0cAGaA,EAAS,kBACpB,gBAAMC,IAAG,GAAT,MAmBWC,EAAb,YAOE,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAkBFC,WAAa,WACX,MAAsC,EAAKD,MAAnCE,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,SACjBC,EAAS,EAAKC,MAAdD,KAER,EAAKE,SAAS,CACZF,KAAMH,EAASM,UAAU,EAAGH,EAAKI,OAAS,GAC1CC,WAAYL,IAASH,IACpB,WACE,EAAKI,MAAMI,WACZC,WAAW,EAAKC,aAAcR,GAE9BO,WAAW,EAAKV,WAAYE,OA3BhC,EAAKG,MAAQ,CACXD,KAAM,GACNQ,aAAa,EACbC,YAAY,GAGd,EAAKF,aAAe,WAClB,EAAKL,SAAS,CAACO,YAAY,IAC3B,EAAKd,MAAMe,YAXI,GAPrB,uCAsBEC,kBAAA,WACEL,WAAWM,KAAKhB,WAAYgB,KAAKjB,MAAMkB,aAvB3C,EA0CEC,OAAA,WACE,OAAQ,oBAAQF,KAAKX,MAAMD,MAASY,KAAKX,MAAMQ,aAAc,QAACjB,EAAD,QA3CjE,GAA2BuB,EAAAA,WAAdrB,EACJsB,aAAe,CACpBH,WAAY,IACZf,MAAO,GACPC,SAAU,KCnBd,IAAMkB,GAAe,uKAQfC,GAAc,mHAMdC,GAAoB,8HAKJ,SAAAxB,GAAK,OAAIA,EAAMyB,QALX,KAA1B,2DAQMC,EAAe,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQzB,EAAV,EAAUA,SAAV,OACnB,QAACoB,EAAD,CAAiBxB,IAAK6B,IACpB,QAACJ,EAAD,MACE,QAACC,EAAD,CAAsBC,MAAM,aAC5B,QAACD,EAAD,CAAsBC,MAAM,aAC5B,QAACD,EAAD,CAAsBC,MAAM,cAE9B,eAAK3B,IAAG,GAILI,KAXP,iIAgBa0B,EAAW,SAAC,GAAD,IAAED,EAAF,EAAEA,OAAQE,EAAV,EAAUA,QAAS3B,EAAnB,EAAmBA,SAAnB,OACtB,QAACwB,EAAD,CAAcC,OAAQA,IACpB,oBACE,gBAAM7B,IAAG,IACP,gBAAMA,IAAG,GAAT,iBAA6C,oBAA7C,kBAAiE,oBAAjE,QADF,KAEG,gBAAMA,IAAG,GAAT,KAFH,MAKA,wBAAQ+B,IAGT3B,IAIQ4B,EAAmB,SAAC,GAA6C,IAA5CH,EAA2C,EAA3CA,OAAQE,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,WAAYhB,EAAc,EAAdA,SAC7D,GAAkC6B,EAAAA,EAAAA,WAAS,GAApCC,EAAP,KAAkBC,EAAlB,KACA,OAAO,QAACL,EAAD,CAAUC,SACf,QAAC9B,EAAD,CAAOgB,SAAU,kBAAIkB,GAAa,IAAQf,WAAYA,GACnDW,GAEFF,OAAQA,IACT,eAAK7B,KAAKA,EAAAA,EAAAA,IAAF,cAAoBkC,EAAY,SAAW,UAA3C,SACL9B,GAAS,QAACL,EAAD,SART,wIAcMqC,EAAe,SAAClC,GAAD,OAAW,yBACpC,QAAC,MAAD,QAAMF,IAAG,GASHE,IAV8B,O,0cCvEhC,SAASmC,EAAT,GAA+B,IAAZjC,EAAW,EAAXA,SACxB,OACE,eAAKJ,KAAKA,EAAAA,EAAAA,IAAF,iEAIJsC,EAAAA,EAAAA,IAAiB,GAJb,KAQJC,EAAAA,EAAAA,IAAgB,GARZ,SAYLnC,EAASoC,KAAI,SAACC,EAAMC,GAAP,OACZ,yBACE,eAAK1C,IAAG,EAKL2C,IAAKD,GACLD,EAAMvC,MAAM0C,OAGf,eAAK5C,IAAG,GAKLyC,EAAMvC,MAAME,eAQlB,IAAMyC,EAAe,SAAC,GAAD,SAAEzC,W","sources":["webpack://jsimonrichard-resume/./src/components/typer.js","webpack://jsimonrichard-resume/./src/components/terminal.js","webpack://jsimonrichard-resume/./src/components/timeline.js"],"sourcesContent":["import { css } from '@emotion/react';\nimport React, { Component } from 'react';\n\nexport const Cursor = ()=>(\n  <span css={css`\n    @keyframes blink {\n      0%  {opacity: 1;}\n      40% {opacity: 1;}\n      50% {opacity: 0;}\n      90% {opacity: 0;}\n    }\n\n    color: white;\n    opacity: 1;\n    animation-name: blink;\n    animation-duration: 1s;\n    animation-iteration-count: infinite;  \n  `}>\n    &#9608;\n  </span>\n);\n\n\nexport class Typer extends Component {\n  static defaultProps = {\n    startDelay: 500,\n    delay: 50,\n    endDelay: 500\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      isUnmounted: false,\n      hideCursor: false\n    }\n\n    this.handleFinish = () => {\n      this.setState({hideCursor: true});\n      this.props.onFinish();\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(this.handleType, this.props.startDelay);\n  }\n\n  handleType = () => {\n    const { children, delay, endDelay } = this.props;\n    const { text } = this.state;\n\n    this.setState({\n      text: children.substring(0, text.length + 1),\n      isFinished: text === children\n    }, () => {\n      if(this.state.isFinished) {\n        setTimeout(this.handleFinish, endDelay);\n      } else {\n        setTimeout(this.handleType, delay);\n      }\n    });\n  };\n\n  render() {\n    return (<span>{ this.state.text }{ !this.state.hideCursor && <Cursor /> }</span>);\n  }\n}","import styled from \"@emotion/styled\";\nimport React, { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport { Link } from 'gatsby';\n\nimport { Typer, Cursor } from \"./typer\";\n\n\nconst TerminalWrapper = styled.div`\n  background: #142137;\n  border-radius: 8px;\n  color: white;\n  border: white 4px solid;\n  font-family: \"Fira Code\", monospace;\n`;\n\nconst TerminalHeader = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst TerminalHeaderButton = styled.div`\n  border-radius: 50%;\n  width: 0.875rem;\n  height: 0.875rem;\n  margin-left: 0.375rem;\n  background-color: ${props => props.color}\n`;\n\nconst TerminalBase = ({styles, children}) => (\n  <TerminalWrapper css={styles}>\n    <TerminalHeader>\n      <TerminalHeaderButton color=\"#ef4444\" />\n      <TerminalHeaderButton color=\"#eab308\" />\n      <TerminalHeaderButton color=\"#22c55e\" />\n    </TerminalHeader>\n    <div css={css`\n      padding: 1.5rem;\n      padding-top: 0px;\n    `}>\n      {children}\n    </div>\n  </TerminalWrapper>\n);\n\nexport const Terminal = ({styles, command, children}) => (\n  <TerminalBase styles={styles}>\n    <div>\n      <span css={css`font-weight: bold`}>\n        <span css={css`color: #5ea61b`}>jsimonrichard<wbr/>@jsimonrichard<wbr/>.com</span>\n        :<span css={css`color: #3465A4`}>~</span>$\n      </span>\n\n      <span> {command}</span>\n    </div>\n\n    {children}\n  </TerminalBase>\n);\n\nexport const AnimatedTerminal = ({styles, command, startDelay, children}) => {\n  const [isRunning, setIsRunning] = useState(true);\n  return <Terminal command={(\n    <Typer onFinish={()=>setIsRunning(false)} startDelay={startDelay}>\n      {command}\n    </Typer>\n  )} styles={styles}>\n    <div css={css`visibility: ${isRunning ? \"hidden\" : \"visible\"}`}>\n      {children}<Cursor />\n    </div>\n  </Terminal>;\n}\n\n\nexport const TerminalLink = (props) => <span>\n  [<Link css={css`\n    :hover {\n      text-decoration: underline;\n      color: #86efac;\n    }\n\n    text-decoration: none;\n    text-transform: uppercase;\n    color: #10b981;\n  `} {...props}/>]\n</span>","import React from 'react';\nimport { css } from '@emotion/react';\nimport { mediaQueryLarge, mediaQueryMedium } from './core';\n\nexport function Timeline({children}) {\n  return (\n    <div css={css`\n      display: grid;\n      grid-template-columns: repeat(3, minmax(0, 1fr));\n\n      ${mediaQueryMedium(css`\n        grid-template-columns: repeat(4, minmax(0, 1fr));\n      `)}\n\n      ${mediaQueryLarge(css`\n        grid-template-columns: repeat(5, minmax(0, 1fr));\n      `)}\n    `}>\n      {children.map((child,id) => (\n        <>\n          <div css={css`\n            text-align: right;\n            padding-right: 1rem;\n            padding-bottom: 1rem;\n            border-right: 2px solid black;\n          `} key={id}>\n            {child.props.date}\n          </div>\n\n          <div css={css`\n            padding-left: 1rem;\n            padding-bottom: 2rem;\n            grid-column: 2 / -1;\n          `}>\n            {child.props.children}\n          </div>\n        </>\n      ))}\n    </div>\n  )\n}\n\nexport const TimelineItem = ({children}) => children;"],"names":["Cursor","css","Typer","props","handleType","children","delay","endDelay","text","state","setState","substring","length","isFinished","setTimeout","handleFinish","isUnmounted","hideCursor","onFinish","componentDidMount","this","startDelay","render","Component","defaultProps","TerminalWrapper","TerminalHeader","TerminalHeaderButton","color","TerminalBase","styles","Terminal","command","AnimatedTerminal","useState","isRunning","setIsRunning","TerminalLink","Timeline","mediaQueryMedium","mediaQueryLarge","map","child","id","key","date","TimelineItem"],"sourceRoot":""}